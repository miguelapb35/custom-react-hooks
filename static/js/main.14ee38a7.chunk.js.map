{"version":3,"sources":["components/useResources.js","components/ResourceList.js","components/Users.js","components/App.js","index.js"],"names":["useResources","resourceName","useState","resources","setResources","fetchResources","a","axios","get","response","data","useEffect","ResourceList","map","resource","key","id","title","Users","users","user","name","App","setResourceName","Fragment","onClick","ReactDOM","render","document","querySelector"],"mappings":"2PAkBeA,EAfM,SAACC,GAAkB,IAAD,EACHC,mBAAS,IADN,mBAC9BC,EAD8B,KACnBC,EADmB,KAG/BC,EAAc,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,sEACEC,IAAMC,IAAN,+CAAkDP,IADpD,OACfQ,EADe,OAErBL,EAAaK,EAASC,MAFD,2CAAH,sDASpB,OAJAC,qBAAU,WACRN,EAAeJ,KACd,CAACA,IAEGE,GCCMS,EAZM,SAAC,GAAoB,IAAnBX,EAAkB,EAAlBA,aACfE,EAAYH,EAAaC,GAE7B,OACE,4BACGE,EAAUU,KAAI,SAAAC,GAAQ,OACrB,wBAAIC,IAAKD,EAASE,IAAlB,IAAwBF,EAASG,MAAjC,UCKKC,EAZD,WACZ,IAAMC,EAAQnB,EAAa,SAEzB,OACE,4BACGmB,EAAMN,KAAI,SAAAO,GAAI,OACb,wBAAIL,IAAKK,EAAKJ,IAAd,IAAoBI,EAAKC,KAAzB,UCaKC,EAlBH,WAAO,IAAD,EACwBpB,mBAAS,SADjC,mBACTD,EADS,KACKsB,EADL,KAGd,OACE,kBAAC,IAAMC,SAAP,KACE,+DACA,8DAEE,uFAEF,kBAAC,EAAD,MACA,4BAAQC,QAAS,kBAAMF,EAAgB,WAAvC,SACA,4BAAQE,QAAS,kBAAOF,EAAgB,WAAxC,SACA,kBAAC,EAAD,CAActB,aAAcA,MCZpCyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.14ee38a7.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useResources = (resourceName) => {\r\n  const [resources, setResources] = useState([]);\r\n\r\n  const fetchResources = async (resourceName) => {\r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${resourceName}`);\r\n    setResources(response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchResources(resourceName)\r\n  }, [resourceName]);  \r\n\r\n  return resources;\r\n}\r\n\r\nexport default useResources;","import React from 'react';\r\nimport useResources from './useResources';\r\n\r\n\r\nconst ResourceList = ({resourceName}) => {\r\n  const resources = useResources(resourceName);\r\n\r\n    return ( \r\n      <ul>\r\n        {resources.map(resource => (\r\n          <li key={resource.id}> {resource.title} </li>\r\n        ))}\r\n      </ul> \r\n    );  \r\n}\r\n\r\nexport default ResourceList;\r\n","import React from 'react';\r\nimport useResources from './useResources';\r\n\r\nconst Users = () => {\r\n  const users = useResources('users');\r\n\r\n    return ( \r\n      <ul>\r\n        {users.map(user => (\r\n          <li key={user.id}> {user.name} </li>\r\n        ))}\r\n      </ul> \r\n    );  \r\n}\r\n\r\nexport default Users;","import React, { useState } from 'react';\r\nimport ResourceList from './ResourceList';\r\nimport Users from './Users';\r\n\r\nconst App = () => {\r\n  const [resourceName, setResourceName] = useState('posts');\r\n\r\n    return ( \r\n      <React.Fragment>\r\n        <h3>Refactor class based components</h3>\r\n        <p>\r\n          into functional components using\r\n          <b> React hooks useState, useEffect and custom Rect hooks </b>\r\n        </p>\r\n        <Users />\r\n        <button onClick={() => setResourceName('posts')}>Posts</button>\r\n        <button onClick={() =>  setResourceName('todos')}>Todos</button>\r\n        <ResourceList resourceName={resourceName} />\r\n      </React.Fragment>\r\n    );  \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}