{"version":3,"sources":["components/useResources.js","components/ResourceList.js","components/App.js","index.js"],"names":["useResources","resourceName","useState","resources","setResources","fetchResources","a","axios","get","response","data","useEffect","ResourceList","map","resource","key","id","title","App","setResourceName","Fragment","onClick","ReactDOM","render","document","querySelector"],"mappings":"2PAkBeA,EAfM,SAACC,GAAkB,IAAD,EACHC,mBAAS,IADN,mBAC9BC,EAD8B,KACnBC,EADmB,KAG/BC,EAAc,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,sEACEC,IAAMC,IAAN,+CAAkDP,IADpD,OACfQ,EADe,OAErBL,EAAaK,EAASC,MAFD,2CAAH,sDASpB,OAJAC,qBAAU,WACRN,EAAeJ,KACd,CAACA,IAEGE,GC6BMS,EAzCM,SAAC,GAAoB,IAAnBX,EAAkB,EAAlBA,aACfE,EAAYH,EAAaC,GAE7B,OACE,4BACGE,EAAUU,KAAI,SAAAC,GAAQ,OACrB,wBAAIC,IAAKD,EAASE,IAAlB,IAAwBF,EAASG,MAAjC,UC6BKC,EAnBH,WAAO,IAAD,EACwBhB,mBAAS,SADjC,mBACTD,EADS,KACKkB,EADL,KAKd,OACE,kBAAC,IAAMC,SAAP,KACE,+DACA,0DACA,iDACA,mDACA,iDACA,4BAAQC,QAAS,kBAAMF,EAAgB,WAAvC,SACA,4BAAQE,QAAS,kBAAOF,EAAgB,WAAxC,SACA,kBAAC,EAAD,CAAclB,aAAcA,MC5BpCqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.17c7b768.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useResources = (resourceName) => {\r\n  const [resources, setResources] = useState([]);\r\n\r\n  const fetchResources = async (resourceName) => {\r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${resourceName}`);\r\n    setResources(response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchResources(resourceName)\r\n  }, [resourceName]);  \r\n\r\n  return resources;\r\n}\r\n\r\nexport default useResources;","import React from 'react';\r\nimport useResources from './useResources';\r\n\r\nconst ResourceList = ({resourceName}) => {\r\n  const resources = useResources(resourceName);\r\n\r\n    return ( \r\n      <ul>\r\n        {resources.map(resource => (\r\n          <li key={resource.id}> {resource.title} </li>\r\n        ))}\r\n      </ul> \r\n    );  \r\n}\r\n\r\n// class based component\r\n\r\n/* class ResourceList extends Component {\r\n  state = { \r\n    resources: [],\r\n  }\r\n    async componentDidMount() {\r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\r\n    this.setState({ resources: response.data })\r\n  }\r\n  async componentDidUpdate(prevProps) {\r\n    if (prevProps.resourceName !== this.props.resourceName) {\r\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\r\n      this.setState({ resources: response.data });\r\n    }\r\n  }\r\n  render() { \r\n    return ( \r\n      <ul>\r\n        {this.state.resources.map(resource => (\r\n          <li key={resource.id}> {resource.title} </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n */\r\n\r\n\r\nexport default ResourceList;\r\n","import React, { useState } from 'react';\r\nimport ResourceList from './ResourceList';\r\n\r\n/* class App extends Component {\r\n  state = { \r\n    resourceName: 'posts'\r\n  }\r\n  render() { \r\n    return ( \r\n      <React.Fragment>\r\n      <h2>React hooks</h2>\r\n        <button onClick={() => this.setState({ resourceName: 'posts' })}>Posts</button>\r\n        <button onClick={() => this.setState({ resourceName: 'todos' })}>Todos</button>\r\n        <ResourceList resourceName={this.state.resourceName} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n} */\r\n\r\nconst App = () => {\r\n  const [resourceName, setResourceName] = useState('posts');\r\n// resourceName === currentState resourceName\r\n// setResourceName === function that changes resourceName\r\n// useState === function (param === initialState)\r\n    return ( \r\n      <React.Fragment>\r\n        <h3>Refactor class based components</h3>\r\n        <h3>into functional components</h3>\r\n        <h3>using React hooks</h3>\r\n        <h3>useState, useEffect</h3>\r\n        <h3>custom Rect hooks</h3>\r\n        <button onClick={() => setResourceName('posts')}>Posts</button>\r\n        <button onClick={() =>  setResourceName('todos')}>Todos</button>\r\n        <ResourceList resourceName={resourceName} />\r\n      </React.Fragment>\r\n    );  \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}